class Solution {
    public int searchInsert(int[] nums, int target) {
        for(int i = 0; i < nums.length; i++) {
            if(nums[i] == target) return i;
            
            else if(nums[i] > target) return i; // adjusting target in between (left smaller, right greater) and returning it's index
        }
        
        return nums.length; // keep trget next to the last element so return it's index.
    }
}

// Binary search
class Solution {
    public int searchTarget (int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        
        while(start <= end) {
            int mid = (start + end) / 2;
            
            if(nums[mid] == target) return mid;
            
            else if(nums[mid] < target) start = mid + 1;
            
            else end = mid - 1;
        }
        
        return end + 1;
    }
}
